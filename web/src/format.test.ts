import { S, words } from "./core"
import { format, makeFormatOptions } from "./format"

const en = ['en-US']

it('should interpolate format', () => {
  expect(format(en, '', {})).toEqual('')
  expect(format(en, 'foo', {})).toEqual('foo')
  expect(format(en, 'foo {} bar', {})).toEqual('foo  bar')
  expect(format(en, 'foo {   } bar', {})).toEqual('foo  bar')
  expect(format(en, '{foo}', { foo: 'bar' })).toEqual('bar')
  expect(format(en, '\n{\nfoo\n}\n', { foo: 'bar' })).toEqual('\nbar\n')
  expect(format(en, '  { foo   }  ', { foo: 'bar' })).toEqual('  bar  ')
  expect(format(en, '{foo} {qux}', { foo: 'bar', qux: 42 })).toEqual('bar 42')
})

const opt = (s: S) => makeFormatOptions(words(s))[1]

it('should translate date format', () => {
  expect(opt('date')).toEqual({ dateStyle: 'full' })
  expect(opt('date-l')).toEqual({ dateStyle: 'long' })
  expect(opt('date-m')).toEqual({ dateStyle: 'medium' })
  expect(opt('date-s')).toEqual({ dateStyle: 'short' })
  expect(opt('time')).toEqual({ timeStyle: 'full' })
  expect(opt('time-l')).toEqual({ timeStyle: 'long' })
  expect(opt('time-m')).toEqual({ timeStyle: 'medium' })
  expect(opt('time-s')).toEqual({ timeStyle: 'short' })
  expect(opt('ca-hebrew')).toEqual({ calendar: 'hebrew' })
  expect(opt('dp-l')).toEqual({ dayPeriod: 'long' })
  expect(opt('dp-s')).toEqual({ dayPeriod: 'short' })
  expect(opt('dp-xs')).toEqual({ dayPeriod: 'narrow' })
  expect(opt('nu-deva')).toEqual({ numberingSystem: 'deva' })
  expect(opt('lc-fit')).toEqual({ localeMatcher: 'best fit' })
  expect(opt('lc-lookup')).toEqual({ localeMatcher: 'lookup' })
  expect(opt('hc-12')).toEqual({ hourCycle: 'h12' })
  expect(opt('hc-24')).toEqual({ hourCycle: 'h24' })
  expect(opt('hc-11')).toEqual({ hourCycle: 'h11' })
  expect(opt('hc-23')).toEqual({ hourCycle: 'h23' })
  expect(opt('fmt-fit')).toEqual({ formatMatcher: 'best fit' })
  expect(opt('fmt-basic')).toEqual({ formatMatcher: 'basic' })
  expect(opt('wd-l')).toEqual({ weekday: 'long' })
  expect(opt('wd-s')).toEqual({ weekday: 'short' })
  expect(opt('wd-xs')).toEqual({ weekday: 'narrow' })
  expect(opt('e-l')).toEqual({ era: 'long' })
  expect(opt('e-s')).toEqual({ era: 'short' })
  expect(opt('e-xs')).toEqual({ era: 'narrow' })
  expect(opt('y')).toEqual({ year: 'numeric' })
  expect(opt('y-2')).toEqual({ year: '2-digit' })
  expect(opt('M')).toEqual({ month: 'numeric' })
  expect(opt('M-2')).toEqual({ month: '2-digit' })
  expect(opt('M-l')).toEqual({ month: 'long' })
  expect(opt('M-s')).toEqual({ month: 'short' })
  expect(opt('M-xs')).toEqual({ month: 'narrow' })
  expect(opt('d')).toEqual({ day: 'numeric' })
  expect(opt('d-2')).toEqual({ day: '2-digit' })
  expect(opt('h')).toEqual({ hour: 'numeric' })
  expect(opt('h-2')).toEqual({ hour: '2-digit' })
  expect(opt('m')).toEqual({ minute: 'numeric' })
  expect(opt('m-2')).toEqual({ minute: '2-digit' })
  expect(opt('s')).toEqual({ second: 'numeric' })
  expect(opt('s-2')).toEqual({ second: '2-digit' })
  expect(opt('sf-0')).toEqual({ fractionalSecondDigits: 0 })
  expect(opt('sf-1')).toEqual({ fractionalSecondDigits: 1 })
  expect(opt('sf-2')).toEqual({ fractionalSecondDigits: 2 })
  expect(opt('sf-3')).toEqual({ fractionalSecondDigits: 3 })
  expect(opt('tz-l')).toEqual({ timeZoneName: 'long' })
  expect(opt('tz-s')).toEqual({ timeZoneName: 'short' })
  expect(opt('tz-offset-l')).toEqual({ timeZoneName: 'longOffset' })
  expect(opt('tz-offset-s')).toEqual({ timeZoneName: 'shortOffset' })
  expect(opt('tz-generic-l')).toEqual({ timeZoneName: 'longGeneric' })
  expect(opt('tz-generic-s')).toEqual({ timeZoneName: 'shortGeneric' })
})